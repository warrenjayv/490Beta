
+ the log reached 10 mb; it has been cleared 
executing quesObject() with qId = 3
obtaining testcases for qId = 3
building the ques object (temp1)... 
Array
(
    [id] => 3
    [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
    [topic] => Adding Integers
    [cons] => Array
        (
        )

    [diff] => 1
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 3
    [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
    [topic] => Adding Integers
    [cons] => Array
        (
        )

    [diff] => 1
    [tests] => Array
        (
            [0] => addThree(100, 200, 300)=600
            [1] => addThree(-7, 0, 19)=12
            [2] => addThree(-1,-1,-1)=-3
            [3] => addThree(1,2,3)=6
            [4] => addThree(4,5,6)=15
            [5] => addThree(0,0,0)=0
        )

)
question object for test built!

obtaining points from each question id: 3 
pts for this question : 10 
executing testObject() for test id : 4 
Array
(
    [id] => 4
    [desc] => testing the new feedback system
    [rel] => 1
    [sub] => 1
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 6
                    [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                    [topic] => String Subtract
                    [cons] => Array
                        (
                        )

                    [diff] => 5
                    [tests] => Array
                        (
                            [0] => stringSub(-3, -9)=six
                            [1] => stringSub(9, 9)=zero
                            [2] => stringSub(50,9)="fourty-nine"
                            [3] => stringSub(5,2)="three"
                        )

                )

            [1] => Array
                (
                    [id] => 3
                    [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                    [topic] => Adding Integers
                    [cons] => Array
                        (
                        )

                    [diff] => 1
                    [tests] => Array
                        (
                            [0] => addThree(100, 200, 300)=600
                            [1] => addThree(-7, 0, 19)=12
                            [2] => addThree(-1,-1,-1)=-3
                            [3] => addThree(1,2,3)=6
                            [4] => addThree(4,5,6)=15
                            [5] => addThree(0,0,0)=0
                        )

                )

        )

    [pts] => Array
        (
            [0] => 10
            [1] => 10
        )

)

pushed test 4 into testArray
executing getFeedbacks() for testId 4 & qId 6
Array
(
    [0] => g5p colon [:] in user answer
    [1] => n0p expecting function [stringSub] in answer found!
    [2] => g20p called [stringSub(-3, -9)], expected: [six], got user answer [six]
    [3] => g20p called [stringSub(9, 9)], expected: [zero], got user answer [zero]
    [4] => b2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
    [5] => b1.6p called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
    [6] => n0p user program succesfully executed. 
)

executing getFeedbacks() for testId 4 & qId 3
Array
(
    [0] => g5p colon [:] in user answer
    [1] => n0p expecting function [addThree] in answer found!
    [2] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
    [3] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
    [4] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
    [5] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
    [6] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
    [7] => n0p user program succesfully executed. 
)

ansObject() formed the ansArray
Array
(
    [answers] => Array
        (
            [0] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [1] => def addThree(a, b, c):
    return a + b + c
        )

    [grades] => Array
        (
            [0] => 6
            [1] => 10
        )

    [feedback] => Array
        (
            [0] => Array
                (
                    [0] => g5p colon [:] in user answer
                    [1] => n0p expecting function [stringSub] in answer found!
                    [2] => g20p called [stringSub(-3, -9)], expected: [six], got user answer [six]
                    [3] => g20p called [stringSub(9, 9)], expected: [zero], got user answer [zero]
                    [4] => b2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
                    [5] => b1.6p called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
                    [6] => n0p user program succesfully executed. 
                )

            [1] => Array
                (
                    [0] => g5p colon [:] in user answer
                    [1] => n0p expecting function [addThree] in answer found!
                    [2] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
                    [3] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
                    [4] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
                    [5] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
                    [6] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
                    [7] => n0p user program succesfully executed. 
                )

        )

    [remarks] => Array
        (
            [0] => 
            [1] => 
        )

    [rel] => 0
)

executing ansObject() for test id : 4 
ansObject() was succesful...output: 
Array
(
    [answers] => Array
        (
            [0] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [1] => def addThree(a, b, c):
    return a + b + c
        )

    [grades] => Array
        (
            [0] => 6
            [1] => 10
        )

    [feedback] => Array
        (
            [0] => Array
                (
                    [0] => g5p colon [:] in user answer
                    [1] => n0p expecting function [stringSub] in answer found!
                    [2] => g20p called [stringSub(-3, -9)], expected: [six], got user answer [six]
                    [3] => g20p called [stringSub(9, 9)], expected: [zero], got user answer [zero]
                    [4] => b2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
                    [5] => b1.6p called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
                    [6] => n0p user program succesfully executed. 
                )

            [1] => Array
                (
                    [0] => g5p colon [:] in user answer
                    [1] => n0p expecting function [addThree] in answer found!
                    [2] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
                    [3] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
                    [4] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
                    [5] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
                    [6] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
                    [7] => n0p user program succesfully executed. 
                )

        )

    [remarks] => Array
        (
            [0] => 
            [1] => 
        )

    [rel] => 0
)

warning! ansObject is an array!
building the attempt object...
Array
(
    [test] => Array
        (
            [id] => 4
            [desc] => testing the new feedback system
            [rel] => 1
            [sub] => 1
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 6
                            [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                            [topic] => String Subtract
                            [cons] => Array
                                (
                                )

                            [diff] => 5
                            [tests] => Array
                                (
                                    [0] => stringSub(-3, -9)=six
                                    [1] => stringSub(9, 9)=zero
                                    [2] => stringSub(50,9)="fourty-nine"
                                    [3] => stringSub(5,2)="three"
                                )

                        )

                    [1] => Array
                        (
                            [id] => 3
                            [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                            [topic] => Adding Integers
                            [cons] => Array
                                (
                                )

                            [diff] => 1
                            [tests] => Array
                                (
                                    [0] => addThree(100, 200, 300)=600
                                    [1] => addThree(-7, 0, 19)=12
                                    [2] => addThree(-1,-1,-1)=-3
                                    [3] => addThree(1,2,3)=6
                                    [4] => addThree(4,5,6)=15
                                    [5] => addThree(0,0,0)=0
                                )

                        )

                )

            [pts] => Array
                (
                    [0] => 10
                    [1] => 10
                )

        )

    [answers] => Array
        (
            [0] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
            [1] => def addThree(a, b, c):
    return a + b + c
        )

    [grades] => Array
        (
            [0] => 6
            [1] => 10
        )

    [feedback] => Array
        (
            [0] => Array
                (
                    [0] => g5p colon [:] in user answer
                    [1] => n0p expecting function [stringSub] in answer found!
                    [2] => g20p called [stringSub(-3, -9)], expected: [six], got user answer [six]
                    [3] => g20p called [stringSub(9, 9)], expected: [zero], got user answer [zero]
                    [4] => b2p called [stringSub(50,9)]  expected answer: ["fourty-nine"], got user answer ["fourty-nine"]
                    [5] => b1.6p called [stringSub(5,2)]  expected answer: ["three"], got user answer ["three"]
                    [6] => n0p user program succesfully executed. 
                )

            [1] => Array
                (
                    [0] => g5p colon [:] in user answer
                    [1] => n0p expecting function [addThree] in answer found!
                    [2] => g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]
                    [3] => g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]
                    [4] => g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]
                    [5] => g20p called [addThree(1,2,3)], expected: [6], got user answer [6]
                    [6] => g20p called [addThree(4,5,6)], expected: [15], got user answer [15]
                    [7] => n0p user program succesfully executed. 
                )

        )

    [remarks] => Array
        (
            [0] => 
            [1] => 
        )

    [rel] => 0
)
pushing the attempt object into array of attempts
executing getAttempt()...output:
{"type":"getA","error":0,"attempts":[{"test":{"id":"1","desc":"Quiz One","rel":"1","sub":"1","ques":[{"id":"4","desc":"Write a function called factorial() which takes one integer parameter n, and returns n!. ","topic":"Math Factorial","cons":["while"],"diff":"4","tests":["factorial(2)=2","factorial(5)=120","factorial(3)=6","factorial(1)=1"]},{"id":"2","desc":"Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.","topic":"Printing string","cons":["for","print"],"diff":"3","tests":["strMult(\"hello\",1)=hello","strMult(\"up\", 4)=upupupup","strMult(\"hey\", 3)=heyheyhey","strMult(\"aba\", 2)=abaaba"]},{"id":"5","desc":"Write a function called sub() that takes two integers and prints their difference.","topic":"Subtraction","cons":["print"],"diff":"1","tests":["sub(3,4)=-1","sub(4,3)=1"]}],"pts":["25","50","25"]},"answers":["def factorial(n):\n    result = 1\n    for i in range(n):\n        if n == 0 or n == 1:\n            break;\n        else:\n            result *= n\n            n -= 1\n    return result","def strMult(s, n):\n    return s*n","def subtract(a,b)\n    print a - b"],"grades":["25","50","25"],"feedback":[[],[],[]],"remarks":["1 should lose points for not using a while loop. \n\n2 should lose points for not using a for loop and for not printing the answer. \n\n3 should lose points for wrong name and for missing colon.","1 should lose points for not using a while loop. \n\n2 should lose points for not using a for loop and for not printing the answer. \n\n3 should lose points for wrong name and for missing colon.","1 should lose points for not using a while loop. \n\n2 should lose points for not using a for loop and for not printing the answer. \n\n3 should lose points for wrong name and for missing colon."],"rel":"0"},{"test":{"id":"2","desc":"Vector Pioneer 2","rel":"1","sub":"1","ques":[{"id":"1","desc":"Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '\/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string \"error\".","topic":"Operators","cons":[],"diff":"2","tests":["operation('+',3,3)=6","operation('-',3,3)=0","operation('\/',3,3)=1","operation('*',3,3)=9","operation('%',3,3)=0","operation('?',3,3)=error","operation('hi',3,3)=error"]},{"id":"2","desc":"Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.","topic":"Printing string","cons":["for","print"],"diff":"3","tests":["strMult(\"hello\",1)=hello","strMult(\"up\", 4)=upupupup","strMult(\"hey\", 3)=heyheyhey","strMult(\"aba\", 2)=abaaba"]}],"pts":["120","120"]},"answers":["def opernoob(op, a, b):\n    if (op == '+'):\n       return a+b\n    if (op == '-'):\n       return a-b\n    if (op == '*'):\n       return a*b\n    if (op == '\/'):\n       return a\/b\n    if (op == '%'):\n       return a%b\n    if (op == '?'):\n       return a?b ","def strMult(s, n):\n    return s * n"],"grades":["120","120"],"feedback":[[],[]],"remarks":["",""],"rel":"0"},{"test":{"id":"4","desc":"testing the new feedback system","rel":"1","sub":"1","ques":[{"id":"6","desc":"Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return \"three\", and stringSub(50,9) would return \"fourty-nine\". Multi-word numbers should be hyphenated, and all characters should be lowercase. ","topic":"String Subtract","cons":[],"diff":"5","tests":["stringSub(-3, -9)=six","stringSub(9, 9)=zero","stringSub(50,9)=\"fourty-nine\"","stringSub(5,2)=\"three\""]},{"id":"3","desc":"Write a function called addThree() that takes three integer parameters and returns their sum.","topic":"Adding Integers","cons":[],"diff":"1","tests":["addThree(100, 200, 300)=600","addThree(-7, 0, 19)=12","addThree(-1,-1,-1)=-3","addThree(1,2,3)=6","addThree(4,5,6)=15","addThree(0,0,0)=0"]}],"pts":["10","10"]},"answers":["def stringSub(a, b): \n    diff = a - b\n    return switch(diff)\n    \ndef switch(diff):\n    switcher = {\n        0: \"zero\",\n        1: \"one\",\n        2: \"two\",\n        3: \"three\",\n        4: \"four\",\n        5: \"five\",\n        6: \"six\",\n        7: \"seven\",\n        8: \"eight\",\n        9: \"nine\",\n    }\n    return switcher.get(diff, \"nothing\")\n    ","def addThree(a, b, c):\n    return a + b + c"],"grades":["6","10"],"feedback":[["g5p colon [:] in user answer","n0p expecting function [stringSub] in answer found!","g20p called [stringSub(-3, -9)], expected: [six], got user answer [six]","g20p called [stringSub(9, 9)], expected: [zero], got user answer [zero]","b2p called [stringSub(50,9)]  expected answer: [\"fourty-nine\"], got user answer [\"fourty-nine\"]","b1.6p called [stringSub(5,2)]  expected answer: [\"three\"], got user answer [\"three\"]","n0p user program succesfully executed. "],["g5p colon [:] in user answer","n0p expecting function [addThree] in answer found!","g20p called [addThree(100, 200, 300)], expected: [600], got user answer [600]","g20p called [addThree(-7, 0, 19)], expected: [12], got user answer [12]","g20p called [addThree(-1,-1,-1)], expected: [-3], got user answer [-3]","g20p called [addThree(1,2,3)], expected: [6], got user answer [6]","g20p called [addThree(4,5,6)], expected: [15], got user answer [15]","n0p user program succesfully executed. "]],"remarks":["",""],"rel":"0"}]}+  page accessed by getCons 2019-04-19 03:22:15pm
+ received data : 
Array
(
    [type] => getT
    [rels] => Array
        (
            [0] => 1
        )

)

+ getCons() in backend  was succesful. data: 
[]
[ + ]  page accessed getT 2019-04-19 03:22:15pm
+ target file size of : /afs/cad/u/r/d/rd248/public_html/download/beta/back/log.txt = 19209
data received...
Array
(
    [type] => getT
    [rels] => Array
        (
            [0] => 1
        )

)
select * from questionstudentrelation where testid = 1
Array
(
    [Id] => 149
    [grade] => 0
    [rel] => 0
    [userAnswer] => def factorial(n):
    result = 1
    for i in range(n):
        if n == 0 or n == 1:
            break;
        else:
            result *= n
            n -= 1
    return result
    [feedback] => 
    [points] => 25
    [maxpoints] => 25
    [testId] => 1
    [questionId] => 4
    [testName] => Quiz One
    [remarks] => 1 should lose points for not using a while loop. 

2 should lose points for not using a for loop and for not printing the answer. 

3 should lose points for wrong name and for missing colon.
)

Array
(
    [Id] => 150
    [grade] => 0
    [rel] => 0
    [userAnswer] => def strMult(s, n):
    return s*n
    [feedback] => 
    [points] => 50
    [maxpoints] => 50
    [testId] => 1
    [questionId] => 2
    [testName] => Quiz One
    [remarks] => 1 should lose points for not using a while loop. 

2 should lose points for not using a for loop and for not printing the answer. 

3 should lose points for wrong name and for missing colon.
)

Array
(
    [Id] => 151
    [grade] => 0
    [rel] => 0
    [userAnswer] => def subtract(a,b)
    print a - b
    [feedback] => 
    [points] => 25
    [maxpoints] => 25
    [testId] => 1
    [questionId] => 5
    [testName] => Quiz One
    [remarks] => 1 should lose points for not using a while loop. 

2 should lose points for not using a for loop and for not printing the answer. 

3 should lose points for wrong name and for missing colon.
)

check the contents of temp..
Array
(
    [id] => 1
    [desc] => Quiz One
    [rel] => 1
    [sub] => 1
)

check the contents of arrayofPts...
Array
(
    [0] => 25
    [1] => 50
    [2] => 25
)

array of questions ... 
Array
(
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 4
                    [desc] => Write a function called factorial() which takes one integer parameter n, and returns n!. 
                    [topic] => Math Factorial
                    [cons] => ["while"]
                    [diff] => 4
                )

            [1] => Array
                (
                    [id] => 2
                    [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                    [topic] => Printing string
                    [cons] => ["for","print"]
                    [diff] => 3
                )

            [2] => Array
                (
                    [id] => 5
                    [desc] => Write a function called sub() that takes two integers and prints their difference.
                    [topic] => Subtraction
                    [cons] => ["print"]
                    [diff] => 1
                )

        )

)

contents of temp with questions...
Array
(
    [id] => 1
    [desc] => Quiz One
    [rel] => 1
    [sub] => 1
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 4
                    [desc] => Write a function called factorial() which takes one integer parameter n, and returns n!. 
                    [topic] => Math Factorial
                    [cons] => ["while"]
                    [diff] => 4
                )

            [1] => Array
                (
                    [id] => 2
                    [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                    [topic] => Printing string
                    [cons] => ["for","print"]
                    [diff] => 3
                )

            [2] => Array
                (
                    [id] => 5
                    [desc] => Write a function called sub() that takes two integers and prints their difference.
                    [topic] => Subtraction
                    [cons] => ["print"]
                    [diff] => 1
                )

        )

)

contents of temp with arrayofPts...
Array
(
    [id] => 1
    [desc] => Quiz One
    [rel] => 1
    [sub] => 1
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 4
                    [desc] => Write a function called factorial() which takes one integer parameter n, and returns n!. 
                    [topic] => Math Factorial
                    [cons] => ["while"]
                    [diff] => 4
                )

            [1] => Array
                (
                    [id] => 2
                    [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                    [topic] => Printing string
                    [cons] => ["for","print"]
                    [diff] => 3
                )

            [2] => Array
                (
                    [id] => 5
                    [desc] => Write a function called sub() that takes two integers and prints their difference.
                    [topic] => Subtraction
                    [cons] => ["print"]
                    [diff] => 1
                )

        )

    [pts] => Array
        (
            [0] => 25
            [1] => 50
            [2] => 25
        )

)

formed the test object...
Array
(
    [id] => 1
    [desc] => Quiz One
    [rel] => 1
    [sub] => 1
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 4
                    [desc] => Write a function called factorial() which takes one integer parameter n, and returns n!. 
                    [topic] => Math Factorial
                    [cons] => ["while"]
                    [diff] => 4
                )

            [1] => Array
                (
                    [id] => 2
                    [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                    [topic] => Printing string
                    [cons] => ["for","print"]
                    [diff] => 3
                )

            [2] => Array
                (
                    [id] => 5
                    [desc] => Write a function called sub() that takes two integers and prints their difference.
                    [topic] => Subtraction
                    [cons] => ["print"]
                    [diff] => 1
                )

        )

    [pts] => Array
        (
            [0] => 25
            [1] => 50
            [2] => 25
        )

)
select * from questionstudentrelation where testid = 2
Array
(
    [Id] => 155
    [grade] => 0
    [rel] => 0
    [userAnswer] => def opernoob(op, a, b):
    if (op == '+'):
       return a+b
    if (op == '-'):
       return a-b
    if (op == '*'):
       return a*b
    if (op == '/'):
       return a/b
    if (op == '%'):
       return a%b
    if (op == '?'):
       return a?b 
    [feedback] => 
    [points] => 120
    [maxpoints] => 120
    [testId] => 2
    [questionId] => 1
    [testName] => Vector Pioneer 2
    [remarks] => 
)

Array
(
    [Id] => 156
    [grade] => 0
    [rel] => 0
    [userAnswer] => def strMult(s, n):
    return s * n
    [feedback] => 
    [points] => 120
    [maxpoints] => 120
    [testId] => 2
    [questionId] => 2
    [testName] => Vector Pioneer 2
    [remarks] => 
)

check the contents of temp..
Array
(
    [id] => 2
    [desc] => Vector Pioneer 2
    [rel] => 1
    [sub] => 1
)

check the contents of arrayofPts...
Array
(
    [0] => 120
    [1] => 120
)

array of questions ... 
Array
(
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 1
                    [desc] => Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string "error".
                    [topic] => Operators
                    [cons] => []
                    [diff] => 2
                )

            [1] => Array
                (
                    [id] => 2
                    [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                    [topic] => Printing string
                    [cons] => ["for","print"]
                    [diff] => 3
                )

        )

)

contents of temp with questions...
Array
(
    [id] => 2
    [desc] => Vector Pioneer 2
    [rel] => 1
    [sub] => 1
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 1
                    [desc] => Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string "error".
                    [topic] => Operators
                    [cons] => []
                    [diff] => 2
                )

            [1] => Array
                (
                    [id] => 2
                    [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                    [topic] => Printing string
                    [cons] => ["for","print"]
                    [diff] => 3
                )

        )

)

contents of temp with arrayofPts...
Array
(
    [id] => 2
    [desc] => Vector Pioneer 2
    [rel] => 1
    [sub] => 1
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 1
                    [desc] => Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string "error".
                    [topic] => Operators
                    [cons] => []
                    [diff] => 2
                )

            [1] => Array
                (
                    [id] => 2
                    [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                    [topic] => Printing string
                    [cons] => ["for","print"]
                    [diff] => 3
                )

        )

    [pts] => Array
        (
            [0] => 120
            [1] => 120
        )

)

formed the test object...
Array
(
    [id] => 2
    [desc] => Vector Pioneer 2
    [rel] => 1
    [sub] => 1
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 1
                    [desc] => Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string "error".
                    [topic] => Operators
                    [cons] => []
                    [diff] => 2
                )

            [1] => Array
                (
                    [id] => 2
                    [desc] => Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.
                    [topic] => Printing string
                    [cons] => ["for","print"]
                    [diff] => 3
                )

        )

    [pts] => Array
        (
            [0] => 120
            [1] => 120
        )

)
select * from questionstudentrelation where testid = 4
Array
(
    [Id] => 159
    [grade] => 0
    [rel] => 0
    [userAnswer] => def stringSub(a, b): 
    diff = a - b
    return switch(diff)
    
def switch(diff):
    switcher = {
        0: "zero",
        1: "one",
        2: "two",
        3: "three",
        4: "four",
        5: "five",
        6: "six",
        7: "seven",
        8: "eight",
        9: "nine",
    }
    return switcher.get(diff, "nothing")
    
    [feedback] => 
    [points] => 6
    [maxpoints] => 10
    [testId] => 4
    [questionId] => 6
    [testName] => testing the new feedback system
    [remarks] => 
)

Array
(
    [Id] => 160
    [grade] => 0
    [rel] => 0
    [userAnswer] => def addThree(a, b, c):
    return a + b + c
    [feedback] => 
    [points] => 10
    [maxpoints] => 10
    [testId] => 4
    [questionId] => 3
    [testName] => testing the new feedback system
    [remarks] => 
)

check the contents of temp..
Array
(
    [id] => 4
    [desc] => testing the new feedback system
    [rel] => 1
    [sub] => 1
)

check the contents of arrayofPts...
Array
(
    [0] => 10
    [1] => 10
)

array of questions ... 
Array
(
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 6
                    [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                    [topic] => String Subtract
                    [cons] => []
                    [diff] => 5
                )

            [1] => Array
                (
                    [id] => 3
                    [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                    [topic] => Adding Integers
                    [cons] => []
                    [diff] => 1
                )

        )

)

contents of temp with questions...
Array
(
    [id] => 4
    [desc] => testing the new feedback system
    [rel] => 1
    [sub] => 1
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 6
                    [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                    [topic] => String Subtract
                    [cons] => []
                    [diff] => 5
                )

            [1] => Array
                (
                    [id] => 3
                    [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                    [topic] => Adding Integers
                    [cons] => []
                    [diff] => 1
                )

        )

)

contents of temp with arrayofPts...
Array
(
    [id] => 4
    [desc] => testing the new feedback system
    [rel] => 1
    [sub] => 1
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 6
                    [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                    [topic] => String Subtract
                    [cons] => []
                    [diff] => 5
                )

            [1] => Array
                (
                    [id] => 3
                    [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                    [topic] => Adding Integers
                    [cons] => []
                    [diff] => 1
                )

        )

    [pts] => Array
        (
            [0] => 10
            [1] => 10
        )

)

formed the test object...
Array
(
    [id] => 4
    [desc] => testing the new feedback system
    [rel] => 1
    [sub] => 1
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 6
                    [desc] => Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return "three", and stringSub(50,9) would return "fourty-nine". Multi-word numbers should be hyphenated, and all characters should be lowercase. 
                    [topic] => String Subtract
                    [cons] => []
                    [diff] => 5
                )

            [1] => Array
                (
                    [id] => 3
                    [desc] => Write a function called addThree() that takes three integer parameters and returns their sum.
                    [topic] => Adding Integers
                    [cons] => []
                    [diff] => 1
                )

        )

    [pts] => Array
        (
            [0] => 10
            [1] => 10
        )

)
running getExam()...output:
{"type":"getT","error":"0","tests":[{"id":"1","desc":"Quiz One","rel":1,"sub":"1","ques":[{"id":"4","desc":"Write a function called factorial() which takes one integer parameter n, and returns n!. ","topic":"Math Factorial","cons":"[\"while\"]","diff":"4"},{"id":"2","desc":"Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.","topic":"Printing string","cons":"[\"for\",\"print\"]","diff":"3"},{"id":"5","desc":"Write a function called sub() that takes two integers and prints their difference.","topic":"Subtraction","cons":"[\"print\"]","diff":"1"}],"pts":["25","50","25"]},{"id":"2","desc":"Vector Pioneer 2","rel":1,"sub":"1","ques":[{"id":"1","desc":"Write a function called operation that takes three parameters: a string 'op', an int 'a', and an int 'b'. Op can be '+', '-', '*', '\/', '%' and the function should return that operation called with the two parameters a and b. If an unknown op is given, the program should return the string \"error\".","topic":"Operators","cons":"[]","diff":"2"},{"id":"2","desc":"Write a function called strMult() that takes two parameters: a string s, and an integer n. The function should print the string s concatenated with itself n times.","topic":"Printing string","cons":"[\"for\",\"print\"]","diff":"3"}],"pts":["120","120"]},{"id":"4","desc":"testing the new feedback system","rel":1,"sub":"1","ques":[{"id":"6","desc":"Write a function called stringSub() which takes two parameters and returns their difference written out as a string. For instance stringSub(5,2) would return \"three\", and stringSub(50,9) would return \"fourty-nine\". Multi-word numbers should be hyphenated, and all characters should be lowercase. ","topic":"String Subtract","cons":"[]","diff":"5"},{"id":"3","desc":"Write a function called addThree() that takes three integer parameters and returns their sum.","topic":"Adding Integers","cons":"[]","diff":"1"}],"pts":["10","10"]}]}