
+ the log reached 10 mb; it has been cleared 
executing quesObject() with qId = 100
obtaining testcases for qId = 100
building the ques object (temp1)... 
Array
(
    [id] => 100
    [desc] => Write a function called op() that takes a one character string, either "+", "-", "/", "%", or "*" and two numbers performing that operation on the numbers.
    [topic] => Op Q
    [diff] => 4
)

the ques object with array cases (temp2)... 
Array
(
    [id] => 100
    [desc] => Write a function called op() that takes a one character string, either "+", "-", "/", "%", or "*" and two numbers performing that operation on the numbers.
    [topic] => Op Q
    [diff] => 4
    [tests] => Array
        (
            [0] => op("+", 2, 3)=5
            [1] => op("-", 1, 1)=0
            [2] => op("/", 6, 2)=3
            [3] => op("*", 3, 2)=6
            [4] => op("%", 5, 4)=1
        )

)
question object for test built!

obtaining points from each question id: 100 
pts for this question : 100 
executing testObject() for test id : 46 
Array
(
    [id] => 46
    [desc] => New Op Test
    [rel] => 1
    [sub] => 1
    [ques] => Array
        (
            [0] => Array
                (
                    [id] => 100
                    [desc] => Write a function called op() that takes a one character string, either "+", "-", "/", "%", or "*" and two numbers performing that operation on the numbers.
                    [topic] => Op Q
                    [diff] => 4
                    [tests] => Array
                        (
                            [0] => op("+", 2, 3)=5
                            [1] => op("-", 1, 1)=0
                            [2] => op("/", 6, 2)=3
                            [3] => op("*", 3, 2)=6
                            [4] => op("%", 5, 4)=1
                        )

                )

        )

    [pts] => Array
        (
            [0] => 100
        )

)

pushed test 46 into testArray
executing getFeedbacks() for testId 46 & qId 100
Array
(
    [0] => g5p missing colon [:] in user answer
    [1] => n0p expecting function [op] in answer found!
    [2] => g20p called [op("+", 2, 3)], expected: [5], got user answer [5]
    [3] => b20p called [op("/", 6, 2)]  expected answer: [3], got user answer [3]
    [4] => b16p called [op("*", 3, 2)]  expected answer: [6], got user answer [6]
    [5] => b12.8p called [op("%", 5, 4)]  expected answer: [1], got user answer [1]
    [6] => n0p user program succesfully executed. 
    [7] => b10.2p constraint [1]  was not found.
    [8] => b8.2p constraint [2]  was not found.
    [9] => b6.6p constraint [3]  was not found.
    [10] => b5.2p constraint [4]  was not found.
    [11] => b4.2p constraint [5]  was not found.
)

ansObject() formed the ansArray
Array
(
    [answers] => Array
        (
            [0] => def op(s, a, b):
    if s=="+":
        return a+b
    if s=="-":
        return a-b
        )

    [grades] => Array
        (
            [0] => 17
        )

    [feedback] => Array
        (
            [0] => Array
                (
                    [0] => g5p missing colon [:] in user answer
                    [1] => n0p expecting function [op] in answer found!
                    [2] => g20p called [op("+", 2, 3)], expected: [5], got user answer [5]
                    [3] => b20p called [op("/", 6, 2)]  expected answer: [3], got user answer [3]
                    [4] => b16p called [op("*", 3, 2)]  expected answer: [6], got user answer [6]
                    [5] => b12.8p called [op("%", 5, 4)]  expected answer: [1], got user answer [1]
                    [6] => n0p user program succesfully executed. 
                    [7] => b10.2p constraint [1]  was not found.
                    [8] => b8.2p constraint [2]  was not found.
                    [9] => b6.6p constraint [3]  was not found.
                    [10] => b5.2p constraint [4]  was not found.
                    [11] => b4.2p constraint [5]  was not found.
                )

        )

    [remarks] => Array
        (
            [0] => dun dun dun
        )

)

executing ansObject() for test id : 46 
ansObject() was succesful...output: 
Array
(
    [answers] => Array
        (
            [0] => def op(s, a, b):
    if s=="+":
        return a+b
    if s=="-":
        return a-b
        )

    [grades] => Array
        (
            [0] => 17
        )

    [feedback] => Array
        (
            [0] => Array
                (
                    [0] => g5p missing colon [:] in user answer
                    [1] => n0p expecting function [op] in answer found!
                    [2] => g20p called [op("+", 2, 3)], expected: [5], got user answer [5]
                    [3] => b20p called [op("/", 6, 2)]  expected answer: [3], got user answer [3]
                    [4] => b16p called [op("*", 3, 2)]  expected answer: [6], got user answer [6]
                    [5] => b12.8p called [op("%", 5, 4)]  expected answer: [1], got user answer [1]
                    [6] => n0p user program succesfully executed. 
                    [7] => b10.2p constraint [1]  was not found.
                    [8] => b8.2p constraint [2]  was not found.
                    [9] => b6.6p constraint [3]  was not found.
                    [10] => b5.2p constraint [4]  was not found.
                    [11] => b4.2p constraint [5]  was not found.
                )

        )

    [remarks] => Array
        (
            [0] => dun dun dun
        )

)

warning! ansObject is an array!
building the attempt object...
Array
(
    [test] => Array
        (
            [id] => 46
            [desc] => New Op Test
            [rel] => 1
            [sub] => 1
            [ques] => Array
                (
                    [0] => Array
                        (
                            [id] => 100
                            [desc] => Write a function called op() that takes a one character string, either "+", "-", "/", "%", or "*" and two numbers performing that operation on the numbers.
                            [topic] => Op Q
                            [diff] => 4
                            [tests] => Array
                                (
                                    [0] => op("+", 2, 3)=5
                                    [1] => op("-", 1, 1)=0
                                    [2] => op("/", 6, 2)=3
                                    [3] => op("*", 3, 2)=6
                                    [4] => op("%", 5, 4)=1
                                )

                        )

                )

            [pts] => Array
                (
                    [0] => 100
                )

        )

    [answers] => Array
        (
            [0] => def op(s, a, b):
    if s=="+":
        return a+b
    if s=="-":
        return a-b
        )

    [grades] => Array
        (
            [0] => 17
        )

    [feedback] => Array
        (
            [0] => Array
                (
                    [0] => g5p missing colon [:] in user answer
                    [1] => n0p expecting function [op] in answer found!
                    [2] => g20p called [op("+", 2, 3)], expected: [5], got user answer [5]
                    [3] => b20p called [op("/", 6, 2)]  expected answer: [3], got user answer [3]
                    [4] => b16p called [op("*", 3, 2)]  expected answer: [6], got user answer [6]
                    [5] => b12.8p called [op("%", 5, 4)]  expected answer: [1], got user answer [1]
                    [6] => n0p user program succesfully executed. 
                    [7] => b10.2p constraint [1]  was not found.
                    [8] => b8.2p constraint [2]  was not found.
                    [9] => b6.6p constraint [3]  was not found.
                    [10] => b5.2p constraint [4]  was not found.
                    [11] => b4.2p constraint [5]  was not found.
                )

        )

    [remarks] => Array
        (
            [0] => dun dun dun
        )

)
pushing the attempt object into array of attempts
executing getAttempt()...output:
{"type":"getA","error":0,"attempts":[{"test":{"id":"10","desc":"TEST 3Q's","rel":"1","sub":"1","ques":[{"id":"3","desc":"create a function called Sub which takes 2 parameters and subtracts and returns the difference.","topic":"Sub","diff":"3","tests":["Sub(3,2)=1","Sub(4,2)=2"]},{"id":"2","desc":"create a function called Mult() that takes 2 parameters and returns their product. ","topic":"multi","diff":"3","tests":["Mult(2,4)=8"]},{"id":"1","desc":"create a function add which takes 2 parameters and returns the sum.","topic":"add","diff":"1","tests":["add(2,3)=5","add(4,4)=8"]}],"pts":["100","100","100"]},"answers":["def ssub(a, b): return a-b","def Mult(a, b):\r\n    return a*b","def add (a, b):\r\n    return a+b"],"grades":["95","100","100"],"feedback":[["g5p missing colon [:] in user answer","b5p expecting function name [Sub] in answer was not found!","g20p called [Sub(3,2)], expected: [1], got user answer [1]","g20p called [Sub(4,2)], expected: [2], got user answer [2]","n0p user program succesfully executed. "],["g5p missing colon [:] in user answer","n0p expecting function [Mult] in answer found!","g20p called [Mult(2,4)], expected: [8], got user answer [8]","n0p user program succesfully executed. "],["g5p missing colon [:] in user answer","n0p expecting function [add] in answer found!","g20p called [add(2,3)], expected: [5], got user answer [5]","g20p called [add(4,4)], expected: [8], got user answer [8]","n0p user program succesfully executed. "]],"remarks":["","",""]},{"test":{"id":"32","desc":"testing the autograder","rel":"1","sub":"1","ques":[{"id":"70","desc":"please write a function called Count which takes one parameter and counts until it reaches that parameter using a for loop. ","topic":"count","diff":"2","tests":["Count(20)=20","Count(50)=50","Count(10)=10","Count(5)=10"]},{"id":"91","desc":"please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. ","topic":"triple","diff":"2","tests":["Triple(2)=6","Triple(3)=9"]}],"pts":["100","100"]},"answers":["def Count(a):   \r\n    for x in range(1, a):        \r\n        if x == a-1:            \r\n          return x+1","def Triple(a):    \r\n    y = 0    \r\n    for x in range(0, 3):\r\n        y = y + a\r\n    \r\n    return y"],"grades":["80","100"],"feedback":[["g5p missing colon [:] in user answer","n0p expecting function [Count] in answer found!","g20p called [Count(20)], expected: [20], got user answer [20]","g20p called [Count(50)], expected: [50], got user answer [50]","g20p called [Count(10)], expected: [10], got user answer [10]","b20p called [Count(5)]  expected answer: [10], got user answer [10]","n0p user program succesfully executed. ","g20p constraint [for] was found."],["g5p missing colon [:] in user answer","n0p expecting function [Triple] in answer found!","g20p called [Triple(2)], expected: [6], got user answer [6]","g20p called [Triple(3)], expected: [9], got user answer [9]","n0p user program succesfully executed. ","g20p constraint [for] was found."]],"remarks":["i hope this works","is my remarks suppose to be here?"]},{"test":{"id":"35","desc":"testing the function name ","rel":"1","sub":"1","ques":[{"id":"94","desc":"run a function called Run which takes 1 parameter. Use a while loop to count up to the paramater and returns it. ","topic":"while","diff":"3","tests":["Run(5)=5","Run(6)=6"]}],"pts":["100"]},"answers":["def run(n): \n    count = 0\n    while(count < n):\n        count = count + 1\n\n    return count"],"grades":["95"],"feedback":[["g5p missing colon [:] in user answer","b5p expecting function name [Run] in answer was not found!","g20p called [Run(5)], expected: [5], got user answer [5]","g20p called [Run(6)], expected: [6], got user answer [6]","n0p user program succesfully executed. ","g20p constraint [while] was found."]],"remarks":["testing with function name and while loop"]},{"test":{"id":"42","desc":"the hardest exam ever made","rel":"1","sub":"1","ques":[{"id":"98","desc":"make a function called Eat which takes 1 parameter and returns it.","topic":"eat","diff":"5","tests":["Eat(2)=2","Eat(3)=3"]},{"id":"69","desc":"create a function called Double which takes 2 parameters and returns doubled.","topic":"easy","diff":"1","tests":["double(2)=4","double(3)=9"]}],"pts":["100","100"]},"answers":["def imapythonoob(n): return n","def double(x, y): return x"],"grades":["76","20"],"feedback":[["g5p missing colon [:] in user answer","b5p expecting function name [Eat] in answer was not found!","g20p called [Eat(2)], expected: [2], got user answer [2]","g20p called [Eat(3)], expected: [3], got user answer [3]","n0p user program succesfully executed. ","b19p constraint [print]  was not found."],["g5p missing colon [:] in user answer","n0p expecting function [double] in answer found!","b80p user program failed to execute. "]],"remarks":["i don't know man this test is hella hard","i don't know man this test is hella hard"]},{"test":{"id":"43","desc":"colon checker test","rel":"1","sub":"1","ques":[{"id":"69","desc":"create a function called Double which takes 2 parameters and returns doubled.","topic":"easy","diff":"1","tests":["double(2)=4","double(3)=9"]},{"id":"1","desc":"create a function add which takes 2 parameters and returns the sum.","topic":"add","diff":"1","tests":["add(2,3)=5","add(4,4)=8"]},{"id":"91","desc":"please write a function called Triple which takes 1 parameter and triples it by addition using a For Loop. ","topic":"triple","diff":"2","tests":["Triple(2)=6","Triple(3)=9"]}],"pts":["100","100","100"]},"answers":["def ddouble(a, b) return a","def whatisthis(a, b) return a+b","def triple(a) \n    y=0\n    for x in range(0, 3):\n    y = y + a\n \n    return y"],"grades":["19","90","19"],"feedback":[["b5p missing colon [:] in user answer","n0p expecting function [double] in answer found!","b76p user program failed to execute. "],["b5p missing colon [:] in user answer","b4.75p expecting function name [add] in answer was not found!","g20p called [add(2,3)], expected: [5], got user answer [5]","g20p called [add(4,4)], expected: [8], got user answer [8]","n0p user program succesfully executed. "],["g5p missing colon [:] in user answer","b5p expecting function name [Triple] in answer was not found!","b76p user program failed to execute. ","g20p constraint [for] was found."]],"remarks":["this test was too hard i think i failed","this test was too hard i think i failed","this test was too hard i think i failed"]},{"test":{"id":"44","desc":"New Test 1 Q 2 Cons 34pts","rel":"1","sub":"1","ques":[{"id":"99","desc":"NEW NEW New Q with Constraints","topic":"new","diff":"5","tests":["new()=a","new()=d"]}],"pts":["34"]},"answers":["def new():\n    return \"\""],"grades":["22"],"feedback":[["g5p missing colon [:] in user answer","n0p expecting function [new] in answer found!","n0p user program succesfully executed. ","b6.8p constraint [while]  was not found.","b5.4p constraint [print]  was not found."]],"remarks":["lets see"]},{"test":{"id":"45","desc":"Test with Op Q","rel":"1","sub":"1","ques":[{"id":"100","desc":"Write a function called op() that takes a one character string, either \"+\", \"-\", \"\/\", \"%\", or \"*\" and two numbers performing that operation on the numbers.","topic":"Op Q","diff":"4","tests":["op(\"+\", 2, 3)=5","op(\"-\", 1, 1)=0","op(\"\/\", 6, 2)=3","op(\"*\", 3, 2)=6","op(\"%\", 5, 4)=1"]}],"pts":["100"]},"answers":["def op(s, a, b):\n    if(s==\"+\"):\n        return a+b\n    if(s==\"-\"):\n        return a-b\n    if(s==\"\/\"):\n        return a\/b\n    if(s==\"%\"):\n        return a%b\n    if(s==\"*\"):\n        return a*b\n    else\n        return \"Error: Unknown operation\""],"grades":["6"],"feedback":[["g5p missing colon [:] in user answer","n0p expecting function [op] in answer found!","b80p user program failed to execute. ","b4p constraint [1]  was not found.","b3.2p constraint [2]  was not found.","b2.6p constraint [3]  was not found.","b2p constraint [4]  was not found.","b1.6p constraint [5]  was not found."]],"remarks":["lets see"]},{"test":{"id":"46","desc":"New Op Test","rel":"1","sub":"1","ques":[{"id":"100","desc":"Write a function called op() that takes a one character string, either \"+\", \"-\", \"\/\", \"%\", or \"*\" and two numbers performing that operation on the numbers.","topic":"Op Q","diff":"4","tests":["op(\"+\", 2, 3)=5","op(\"-\", 1, 1)=0","op(\"\/\", 6, 2)=3","op(\"*\", 3, 2)=6","op(\"%\", 5, 4)=1"]}],"pts":["100"]},"answers":["def op(s, a, b):\n    if s==\"+\":\n        return a+b\n    if s==\"-\":\n        return a-b"],"grades":["17"],"feedback":[["g5p missing colon [:] in user answer","n0p expecting function [op] in answer found!","g20p called [op(\"+\", 2, 3)], expected: [5], got user answer [5]","b20p called [op(\"\/\", 6, 2)]  expected answer: [3], got user answer [3]","b16p called [op(\"*\", 3, 2)]  expected answer: [6], got user answer [6]","b12.8p called [op(\"%\", 5, 4)]  expected answer: [1], got user answer [1]","n0p user program succesfully executed. ","b10.2p constraint [1]  was not found.","b8.2p constraint [2]  was not found.","b6.6p constraint [3]  was not found.","b5.2p constraint [4]  was not found.","b4.2p constraint [5]  was not found."]],"remarks":["dun dun dun"]}]}